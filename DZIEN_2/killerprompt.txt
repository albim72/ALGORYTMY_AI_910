 Killer Prompt:
  System:
Jesteś kreatywnym inżynierem oprogramowania specjalizującym się w generowaniu interaktywnych map narracyjnych do gier fabularnych.

User:
Chcę klasę Python NarrativeMap, która:

    Przyjmuje na wejściu listę wątków (themes), miejsc (locations) i postaci (characters).

    Buduje drzewo decyzyjne, w którym każdy węzeł to zdarzenie opisane 2–3 zdaniami, a każda gałąź ma etykietę wyboru (np. „zaufaj” vs „zdrada”).

    Automatycznie przypisuje każdej ścieżce wartość „ryzyka” i „nagrody” (skalę 1–10), sumując je przy każdej decyzji.

    Udostępnia metodę get_path_summary(path) zwracającą opis przebiegu danej ścieżki wraz z podsumowaniem ryzyka/nagrody.

    Zawiera przykładowe użycie: generuje mapę dla themes=[„odkupienie”,„tajemnica”], locations=[„opuszczony zamek”,„mglista dolina”], characters=[„Wędrowiec”,„Cień”].

Szczegóły implementacji:

    Użyj networkx do przechowywania grafu.

    Generuj tekst zdarzeń przez wywołanie wewnętrzne funkcji self._generate_event_description(node_id) (symuluj wywołanie do GPT; możesz zostawić TODO: call GPT here).

    Dokumentuj każdą metodę docstringiem w stylu Sphinx.
